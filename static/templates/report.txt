
<!-- templates/report_issue.html -->
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>Report a Road Issue</title>

    <!-- Your custom CSS -->
    <link
      rel="stylesheet"
      href="{{ url_for('static', filename='styles/reports.css') }}"
    />

    <!-- Leaflet CSS -->
    <link
      rel="stylesheet"
      href="https://unpkg.com/leaflet@1.9.3/dist/leaflet.css"
      crossorigin=""
    />
  </head>
  <body>
    <div class="page-wrapper">
      <!-- Navigation -->
      <div class="nav-wrapper">
        <div class="grad-bar"></div>
        <nav class="navbar">
          <div class="menu-toggle" id="mobile-menu">
            <span class="bar"></span>
            <span class="bar"></span>
            <span class="bar"></span>
          </div>
          <ul class="nav no-search">
            <li class="nav-item">
              <a href="{{ url_for('auth.dashboard') }}">Home</a>
            </li>
            <li class="nav-item">
              <a href="{{ url_for('auth.logout') }}">Logout</a>
            </li>
          </ul>
        </nav>
      </div>
      <div class="report-container">
        <h1>Report a Road Issue</h1>

         <!-- Flash Messages -->
        <div class="flash-messages">
          {% with messages = get_flashed_messages(with_categories=true) %}
            {% if messages %}
              {% for category, message in messages %}
                <div class="alert alert-{{ category }}">
                  {{ message }}
                </div>
              {% endfor %}
            {% endif %}
          {% endwith %}
        </div>

        <form
          action="{{ url_for('reports.report_issue') }}"
          method="POST"
          enctype="multipart/form-data"
        >
          <label for="description">Description:</label>
          <textarea id="description" name="description" rows="4" required></textarea>

          <!-- CITY / VILLAGE SELECT -->
          <label for="citySelect">City / Village:</label>
          <select id="citySelect" name="city" class="form-select mb-3" required>
            <option value="">— Select your locality —</option>
          </select>

          <!-- Map Container -->
          <div id="map" style="width:100%; height:300px; margin-bottom:1rem;"></div>

          <!-- Hidden inputs for lat/lng -->
          <input type="hidden" id="lat" name="lat" />
          <input type="hidden" id="lng" name="lng" />

          <label for="image">Upload Image (optional):</label>
          <input type="file" id="image" name="image" accept="image/*" />

          <button type="submit" id="submitBtn" disabled>Submit Report</button>
        </form>
      </div>
    </div>

    <!-- Leaflet JS -->
    <script src="https://unpkg.com/leaflet@1.9.3/dist/leaflet.js" crossorigin=""></script>
    <script>
      // 1) List of Israeli localities (cities + southern Arab/Bedouin villages)
      const localities = [
        { name: "Jerusalem",        coords: [31.7683, 35.2137] },
        { name: "Tel Aviv‑Yafo",    coords: [32.0853, 34.7818] },
        { name: "Haifa",            coords: [32.7940, 34.9896] },
        { name: "Rishon LeZion",    coords: [31.9485, 34.8125] },
        { name: "Petah Tikva",      coords: [32.0906, 34.9153] },
        { name: "Ashdod",           coords: [31.8014, 34.6435] },
        { name: "Netanya",          coords: [32.3215, 34.8532] },
        { name: "Beersheba",        coords: [31.2518, 34.7915] },
        { name: "Nazareth",         coords: [32.6996, 35.3035] },
        { name: "Eilat",            coords: [29.5577, 34.9519] },
        { name: "Hura",             coords: [31.29833, 34.93917] },
        { name: "Rahat",            coords: [31.39250, 34.75444] },
        { name: "Tel Sheva",        coords: [31.24667, 34.85611] },
        { name: "Segev Shalom",     coords: [31.19722, 34.83833] },
        { name: "Lakiya",           coords: [31.32444, 34.86722] },
        { name: "Kuseife",          coords: [31.24528, 35.09278] },
        { name: "Ar'arat an‑Naqab", coords: [31.15972, 35.02361] }
      ];

      // 2) Populate the dropdown
      const citySelect = document.getElementById("citySelect");
      localities.forEach(loc => {
        const opt = document.createElement("option");
        opt.value = loc.coords.join(",");
        opt.text = loc.name;
        citySelect.appendChild(opt);
      });

      // 3) Initialize map, center on Israel
      const map = L.map("map").setView([31.5, 34.75], 7);

      // 4) Add Google Hybrid tiles (satellite + labels)
      L.tileLayer("http://{s}.google.com/vt/lyrs=y&x={x}&y={y}&z={z}", {
        maxZoom: 19,
        subdomains: ["mt0", "mt1", "mt2", "mt3"],
        attribution: "Map data © Google"
      }).addTo(map);

      let marker;
      const latInput = document.getElementById("lat");
      const lngInput = document.getElementById("lng");
      const submitBtn = document.getElementById("submitBtn");

      function enableSubmit() {
        submitBtn.disabled = !(latInput.value && lngInput.value);
      }

      // 5) On locality selection: center, zoom, drop/move marker
      citySelect.addEventListener("change", () => {
        const val = citySelect.value;
        if (!val) return;
        const [lat, lng] = val.split(",").map(Number);

        map.setView([lat, lng], 13);

        if (marker) {
          marker.setLatLng([lat, lng]);
        } else {
          marker = L.marker([lat, lng], { draggable: true }).addTo(map);
          marker.on("dragend", e => {
            const { lat, lng } = e.target.getLatLng();
            latInput.value = lat;
            lngInput.value = lng;
            enableSubmit();
          });
        }

        latInput.value = lat;
        lngInput.value = lng;
        enableSubmit();
      });

      // 6) Optional: allow click-to-place marker
      map.on("click", e => {
        const { lat, lng } = e.latlng;
        if (!marker) {
          marker = L.marker([lat, lng], { draggable: true }).addTo(map);
          marker.on("dragend", ev => {
            const { lat, lng } = ev.target.getLatLng();
            latInput.value = lat;
            lngInput.value = lng;
            enableSubmit();
          });
        } else {
          marker.setLatLng([lat, lng]);
        }
        latInput.value = lat;
        lngInput.value = lng;
        enableSubmit();
      });
    </script>
  </body>
</html>
